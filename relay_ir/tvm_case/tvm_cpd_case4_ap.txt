fn (%x: Tensor[(3, 4), float32] /* ty=Tensor[(3, 4), float32] */, %w1: Tensor[(5, 4), float32] /* ty=Tensor[(5, 4), float32] */, %w2: Tensor[(10, 4), float32] /* ty=Tensor[(10, 4), float32] */, %b1: Tensor[(5), float32] /* ty=Tensor[(5), float32] */, %b2: Tensor[(1), float32] /* ty=Tensor[(1), float32] */) -> (Tensor[(3, 5), float32], Tensor[(3, 10), float32]) {
  %0 = (%w1, %w2) /* ty=(Tensor[(5, 4), float32], Tensor[(10, 4), float32]) */;
  %1 = concatenate(%0) /* ty=Tensor[(15, 4), float32] */;
  %2 = repeat(%b2, repeats=10, axis=0) /* ty=Tensor[(10), float32] */;
  %3 = (%b1, %2) /* ty=(Tensor[(5), float32], Tensor[(10), float32]) */;
  %4 = nn.dense(%x, %1, units=15) /* ty=Tensor[(3, 15), float32] */;
  %5 = concatenate(%3) /* ty=Tensor[(15), float32] */;
  %6 = add(%4, %5) /* ty=Tensor[(3, 15), float32] */;
  %7 = strided_slice(%6, begin=[0, 0], end=[-1, 5], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(3, 5), float32] */;
  %8 = strided_slice(%6, begin=[0, 5], end=[-1, 10], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(3, 10), float32] */;
  (%7, %8) /* ty=(Tensor[(3, 5), float32], Tensor[(3, 10), float32]) */
} /* ty=fn (Tensor[(3, 4), float32], Tensor[(5, 4), float32], Tensor[(10, 4), float32], Tensor[(5), float32], Tensor[(1), float32]) -> (Tensor[(3, 5), float32], Tensor[(3, 10), float32]) */