fn (%x: Tensor[(1, 4, 16, 16), float32] /* ty=Tensor[(1, 4, 16, 16), float32] */, %w: Tensor[(2, 4, 1, 1), float32] /* ty=Tensor[(2, 4, 1, 1), float32] */) -> Tensor[(1, 4, 16, 16), float32] {
  %0 = (%w, %w) /* ty=(Tensor[(2, 4, 1, 1), float32], Tensor[(2, 4, 1, 1), float32]) */;
  %1 = concatenate(%0) /* ty=Tensor[(4, 4, 1, 1), float32] */;
  %2 = nn.conv2d(%x, %1, padding=[0, 0, 0, 0], channels=4) /* ty=Tensor[(1, 4, 16, 16), float32] */;
  %3 = strided_slice(%2, begin=[0, 0], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %4 = strided_slice(%2, begin=[0, 2], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %5 = (%3, %4) /* ty=(Tensor[(1, 2, 16, 16), float32], Tensor[(1, 2, 16, 16), float32]) */;
  %6 = (%w, %w) /* ty=(Tensor[(2, 4, 1, 1), float32], Tensor[(2, 4, 1, 1), float32]) */;
  %7 = concatenate(%5, axis=1) /* ty=Tensor[(1, 4, 16, 16), float32] */;
  %8 = concatenate(%6) /* ty=Tensor[(4, 4, 1, 1), float32] */;
  %9 = nn.conv2d(%7, %8, padding=[0, 0, 0, 0], channels=4) /* ty=Tensor[(1, 4, 16, 16), float32] */;
  %10 = strided_slice(%9, begin=[0, 0], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %11 = strided_slice(%9, begin=[0, 2], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %12 = (%10, %11) /* ty=(Tensor[(1, 2, 16, 16), float32], Tensor[(1, 2, 16, 16), float32]) */;
  %13 = (%w, %w) /* ty=(Tensor[(2, 4, 1, 1), float32], Tensor[(2, 4, 1, 1), float32]) */;
  %14 = concatenate(%12, axis=1) /* ty=Tensor[(1, 4, 16, 16), float32] */;
  %15 = concatenate(%13) /* ty=Tensor[(4, 4, 1, 1), float32] */;
  %16 = nn.conv2d(%14, %15, padding=[0, 0, 0, 0], channels=4) /* ty=Tensor[(1, 4, 16, 16), float32] */;
  %17 = strided_slice(%16, begin=[0, 0], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %18 = strided_slice(%16, begin=[0, 2], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %19 = (%17, %18) /* ty=(Tensor[(1, 2, 16, 16), float32], Tensor[(1, 2, 16, 16), float32]) */;
  %20 = (%w, %w) /* ty=(Tensor[(2, 4, 1, 1), float32], Tensor[(2, 4, 1, 1), float32]) */;
  %21 = concatenate(%19, axis=1) /* ty=Tensor[(1, 4, 16, 16), float32] */;
  %22 = concatenate(%20) /* ty=Tensor[(4, 4, 1, 1), float32] */;
  %23 = nn.conv2d(%21, %22, padding=[0, 0, 0, 0], channels=4) /* ty=Tensor[(1, 4, 16, 16), float32] */;
  %24 = strided_slice(%23, begin=[0, 0], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %25 = strided_slice(%23, begin=[0, 2], end=[-1, 2], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 2, 16, 16), float32] */;
  %26 = (%24, %25) /* ty=(Tensor[(1, 2, 16, 16), float32], Tensor[(1, 2, 16, 16), float32]) */;
  concatenate(%26, axis=1) /* ty=Tensor[(1, 4, 16, 16), float32] */
} /* ty=fn (Tensor[(1, 4, 16, 16), float32], Tensor[(2, 4, 1, 1), float32]) -> Tensor[(1, 4, 16, 16), float32] */