fn (%x: Tensor[(100, 300), float32] /* ty=Tensor[(100, 300), float32] */, %w1: Tensor[(200, 300), float32] /* ty=Tensor[(200, 300), float32] */, %w2: Tensor[(400, 300), float32] /* ty=Tensor[(400, 300), float32] */, %w3: Tensor[(600, 300), float32] /* ty=Tensor[(600, 300), float32] */) -> (Tensor[(100, 200), float32], Tensor[(100, 400), float32], Tensor[(100, 600), float32]) {
  %0 = (%w1, %w2, %w3) /* ty=(Tensor[(200, 300), float32], Tensor[(400, 300), float32], Tensor[(600, 300), float32]) */;
  %1 = concatenate(%0) /* ty=Tensor[(1200, 300), float32] */;
  %2 = nn.dense(%x, %1, units=1200) /* ty=Tensor[(100, 1200), float32] */;
  %3 = strided_slice(%2, begin=[0, 0], end=[-1, 200], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(100, 200), float32] */;
  %4 = strided_slice(%2, begin=[0, 200], end=[-1, 400], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(100, 400), float32] */;
  %5 = strided_slice(%2, begin=[0, 600], end=[-1, 600], strides=[1, 1], slice_mode="size", axes=None) /* ty=Tensor[(100, 600), float32] */;
  (%3, %4, %5) /* ty=(Tensor[(100, 200), float32], Tensor[(100, 400), float32], Tensor[(100, 600), float32]) */
} /* ty=fn (Tensor[(100, 300), float32], Tensor[(200, 300), float32], Tensor[(400, 300), float32], Tensor[(600, 300), float32]) -> (Tensor[(100, 200), float32], Tensor[(100, 400), float32], Tensor[(100, 600), float32]) */