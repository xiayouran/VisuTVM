fn (%x: Tensor[(1, 16, 16, 16), float32] /* ty=Tensor[(1, 16, 16, 16), float32] */, %w: Tensor[(32, 16, 3, 3), float32] /* ty=Tensor[(32, 16, 3, 3), float32] */) -> Tensor[(1, 32, 16, 16), float32] {
  %0 = nn.conv2d(%x, %w, padding=[1, 1, 1, 1]) /* ty=Tensor[(1, 32, 16, 16), float32] */;
  %1 = add(meta[relay.Constant][0] /* ty=Tensor[(32, 1, 1), float32] */, meta[relay.Constant][1] /* ty=Tensor[(32, 1, 1), float32] */) /* ty=Tensor[(32, 1, 1), float32] */;
  %2 = add(%0, %1) /* ty=Tensor[(1, 32, 16, 16), float32] */;
  nn.relu(%2) /* ty=Tensor[(1, 32, 16, 16), float32] */
} /* ty=fn (Tensor[(1, 16, 16, 16), float32], Tensor[(32, 16, 3, 3), float32]) -> Tensor[(1, 32, 16, 16), float32] */
