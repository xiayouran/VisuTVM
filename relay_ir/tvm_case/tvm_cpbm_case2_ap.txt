fn (%x: Tensor[(1, 100, 300), float32] /* ty=Tensor[(1, 100, 300), float32] */, %w1: Tensor[(1, 200, 300), float32] /* ty=Tensor[(1, 200, 300), float32] */, %w2: Tensor[(1, 200, 300), float32] /* ty=Tensor[(1, 200, 300), float32] */, %w3: Tensor[(1, 200, 300), float32] /* ty=Tensor[(1, 200, 300), float32] */, %b1: Tensor[(200), float32] /* ty=Tensor[(200), float32] */, %b2: Tensor[(200), float32] /* ty=Tensor[(200), float32] */, %b3: Tensor[(200), float32] /* ty=Tensor[(200), float32] */) -> (Tensor[(1, 100, 200), float32], Tensor[(1, 100, 200), float32], Tensor[(1, 100, 200), float32]) {
  %0 = (%w1, %w2, %w3) /* ty=(Tensor[(1, 200, 300), float32], Tensor[(1, 200, 300), float32], Tensor[(1, 200, 300), float32]) */;
  %1 = concatenate(%0, axis=1) /* ty=Tensor[(1, 600, 300), float32] */;
  %2 = (%b1, %b2, %b3) /* ty=(Tensor[(200), float32], Tensor[(200), float32], Tensor[(200), float32]) */;
  %3 = nn.batch_matmul(%x, %1, transpose_b=True) /* ty=Tensor[(1, 100, 600), float32] */;
  %4 = concatenate(%2, axis=-1) /* ty=Tensor[(600), float32] */;
  %5 = add(%3, %4) /* ty=Tensor[(1, 100, 600), float32] */;
  %6 = strided_slice(%5, begin=[0, 0, 0], end=[-1, -1, 200], strides=[1, 1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 100, 200), float32] */;
  %7 = strided_slice(%5, begin=[0, 0, 200], end=[-1, -1, 200], strides=[1, 1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 100, 200), float32] */;
  %8 = strided_slice(%5, begin=[0, 0, 400], end=[-1, -1, 200], strides=[1, 1, 1], slice_mode="size", axes=None) /* ty=Tensor[(1, 100, 200), float32] */;
  (%6, %7, %8) /* ty=(Tensor[(1, 100, 200), float32], Tensor[(1, 100, 200), float32], Tensor[(1, 100, 200), float32]) */
} /* ty=fn (Tensor[(1, 100, 300), float32], Tensor[(1, 200, 300), float32], Tensor[(1, 200, 300), float32], Tensor[(1, 200, 300), float32], Tensor[(200), float32], Tensor[(200), float32], Tensor[(200), float32]) -> (Tensor[(1, 100, 200), float32], Tensor[(1, 100, 200), float32], Tensor[(1, 100, 200), float32]) */