fn (%input0: Tensor[(1, 3, 224, 224), float32] /* ty=Tensor[(1, 3, 224, 224), float32] */, %features.0.0.weight: Tensor[(32, 3, 3, 3), float32] /* ty=Tensor[(32, 3, 3, 3), float32] */, %features.0.1.weight: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.0.1.bias: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.0.1.running_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.0.1.running_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.1.conv.0.0.weight: Tensor[(32, 1, 3, 3), float32] /* ty=Tensor[(32, 1, 3, 3), float32] */, %features.1.conv.0.1.weight: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.1.conv.0.1.bias: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.1.conv.0.1.running_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.1.conv.0.1.running_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.1.conv.1.weight: Tensor[(16, 32, 1, 1), float32] /* ty=Tensor[(16, 32, 1, 1), float32] */, %features.1.conv.2.weight: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, %features.1.conv.2.bias: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, %features.1.conv.2.running_mean: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, %features.1.conv.2.running_var: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, %features.2.conv.0.0.weight: Tensor[(96, 16, 1, 1), float32] /* ty=Tensor[(96, 16, 1, 1), float32] */, %features.2.conv.0.1.weight: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.0.1.bias: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.0.1.running_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.0.1.running_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.1.0.weight: Tensor[(96, 1, 3, 3), float32] /* ty=Tensor[(96, 1, 3, 3), float32] */, %features.2.conv.1.1.weight: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.1.1.bias: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.1.1.running_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.1.1.running_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.2.conv.2.weight: Tensor[(24, 96, 1, 1), float32] /* ty=Tensor[(24, 96, 1, 1), float32] */, %features.2.conv.3.weight: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.2.conv.3.bias: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.2.conv.3.running_mean: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.2.conv.3.running_var: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.3.conv.0.0.weight: Tensor[(144, 24, 1, 1), float32] /* ty=Tensor[(144, 24, 1, 1), float32] */, %features.3.conv.0.1.weight: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.0.1.bias: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.0.1.running_mean: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.0.1.running_var: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.1.0.weight: Tensor[(144, 1, 3, 3), float32] /* ty=Tensor[(144, 1, 3, 3), float32] */, %features.3.conv.1.1.weight: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.1.1.bias: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.1.1.running_mean: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.1.1.running_var: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.3.conv.2.weight: Tensor[(24, 144, 1, 1), float32] /* ty=Tensor[(24, 144, 1, 1), float32] */, %features.3.conv.3.weight: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.3.conv.3.bias: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.3.conv.3.running_mean: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.3.conv.3.running_var: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %features.4.conv.0.0.weight: Tensor[(144, 24, 1, 1), float32] /* ty=Tensor[(144, 24, 1, 1), float32] */, %features.4.conv.0.1.weight: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.0.1.bias: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.0.1.running_mean: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.0.1.running_var: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.1.0.weight: Tensor[(144, 1, 3, 3), float32] /* ty=Tensor[(144, 1, 3, 3), float32] */, %features.4.conv.1.1.weight: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.1.1.bias: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.1.1.running_mean: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.1.1.running_var: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %features.4.conv.2.weight: Tensor[(32, 144, 1, 1), float32] /* ty=Tensor[(32, 144, 1, 1), float32] */, %features.4.conv.3.weight: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.4.conv.3.bias: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.4.conv.3.running_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.4.conv.3.running_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.5.conv.0.0.weight: Tensor[(192, 32, 1, 1), float32] /* ty=Tensor[(192, 32, 1, 1), float32] */, %features.5.conv.0.1.weight: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.0.1.bias: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.0.1.running_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.0.1.running_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.1.0.weight: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, %features.5.conv.1.1.weight: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.1.1.bias: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.1.1.running_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.1.1.running_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.5.conv.2.weight: Tensor[(32, 192, 1, 1), float32] /* ty=Tensor[(32, 192, 1, 1), float32] */, %features.5.conv.3.weight: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.5.conv.3.bias: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.5.conv.3.running_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.5.conv.3.running_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.6.conv.0.0.weight: Tensor[(192, 32, 1, 1), float32] /* ty=Tensor[(192, 32, 1, 1), float32] */, %features.6.conv.0.1.weight: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.0.1.bias: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.0.1.running_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.0.1.running_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.1.0.weight: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, %features.6.conv.1.1.weight: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.1.1.bias: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.1.1.running_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.1.1.running_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.6.conv.2.weight: Tensor[(32, 192, 1, 1), float32] /* ty=Tensor[(32, 192, 1, 1), float32] */, %features.6.conv.3.weight: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.6.conv.3.bias: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.6.conv.3.running_mean: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.6.conv.3.running_var: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %features.7.conv.0.0.weight: Tensor[(192, 32, 1, 1), float32] /* ty=Tensor[(192, 32, 1, 1), float32] */, %features.7.conv.0.1.weight: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.0.1.bias: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.0.1.running_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.0.1.running_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.1.0.weight: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, %features.7.conv.1.1.weight: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.1.1.bias: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.1.1.running_mean: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.1.1.running_var: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %features.7.conv.2.weight: Tensor[(64, 192, 1, 1), float32] /* ty=Tensor[(64, 192, 1, 1), float32] */, %features.7.conv.3.weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.7.conv.3.bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.7.conv.3.running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.7.conv.3.running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.8.conv.0.0.weight: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, %features.8.conv.0.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.0.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.0.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.0.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.1.0.weight: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, %features.8.conv.1.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.1.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.1.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.1.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.8.conv.2.weight: Tensor[(64, 384, 1, 1), float32] /* ty=Tensor[(64, 384, 1, 1), float32] */, %features.8.conv.3.weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.8.conv.3.bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.8.conv.3.running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.8.conv.3.running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.9.conv.0.0.weight: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, %features.9.conv.0.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.0.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.0.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.0.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.1.0.weight: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, %features.9.conv.1.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.1.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.1.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.1.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.9.conv.2.weight: Tensor[(64, 384, 1, 1), float32] /* ty=Tensor[(64, 384, 1, 1), float32] */, %features.9.conv.3.weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.9.conv.3.bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.9.conv.3.running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.9.conv.3.running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.10.conv.0.0.weight: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, %features.10.conv.0.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.0.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.0.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.0.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.1.0.weight: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, %features.10.conv.1.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.1.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.1.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.1.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.10.conv.2.weight: Tensor[(64, 384, 1, 1), float32] /* ty=Tensor[(64, 384, 1, 1), float32] */, %features.10.conv.3.weight: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.10.conv.3.bias: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.10.conv.3.running_mean: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.10.conv.3.running_var: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %features.11.conv.0.0.weight: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, %features.11.conv.0.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.0.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.0.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.0.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.1.0.weight: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, %features.11.conv.1.1.weight: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.1.1.bias: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.1.1.running_mean: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.1.1.running_var: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %features.11.conv.2.weight: Tensor[(96, 384, 1, 1), float32] /* ty=Tensor[(96, 384, 1, 1), float32] */, %features.11.conv.3.weight: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.11.conv.3.bias: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.11.conv.3.running_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.11.conv.3.running_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.12.conv.0.0.weight: Tensor[(576, 96, 1, 1), float32] /* ty=Tensor[(576, 96, 1, 1), float32] */, %features.12.conv.0.1.weight: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.0.1.bias: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.0.1.running_mean: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.0.1.running_var: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.1.0.weight: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, %features.12.conv.1.1.weight: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.1.1.bias: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.1.1.running_mean: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.1.1.running_var: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.12.conv.2.weight: Tensor[(96, 576, 1, 1), float32] /* ty=Tensor[(96, 576, 1, 1), float32] */, %features.12.conv.3.weight: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.12.conv.3.bias: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.12.conv.3.running_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.12.conv.3.running_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.13.conv.0.0.weight: Tensor[(576, 96, 1, 1), float32] /* ty=Tensor[(576, 96, 1, 1), float32] */, %features.13.conv.0.1.weight: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.0.1.bias: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.0.1.running_mean: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.0.1.running_var: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.1.0.weight: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, %features.13.conv.1.1.weight: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.1.1.bias: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.1.1.running_mean: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.1.1.running_var: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.13.conv.2.weight: Tensor[(96, 576, 1, 1), float32] /* ty=Tensor[(96, 576, 1, 1), float32] */, %features.13.conv.3.weight: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.13.conv.3.bias: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.13.conv.3.running_mean: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.13.conv.3.running_var: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %features.14.conv.0.0.weight: Tensor[(576, 96, 1, 1), float32] /* ty=Tensor[(576, 96, 1, 1), float32] */, %features.14.conv.0.1.weight: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.0.1.bias: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.0.1.running_mean: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.0.1.running_var: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.1.0.weight: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, %features.14.conv.1.1.weight: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.1.1.bias: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.1.1.running_mean: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.1.1.running_var: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %features.14.conv.2.weight: Tensor[(160, 576, 1, 1), float32] /* ty=Tensor[(160, 576, 1, 1), float32] */, %features.14.conv.3.weight: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.14.conv.3.bias: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.14.conv.3.running_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.14.conv.3.running_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.15.conv.0.0.weight: Tensor[(960, 160, 1, 1), float32] /* ty=Tensor[(960, 160, 1, 1), float32] */, %features.15.conv.0.1.weight: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.0.1.bias: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.0.1.running_mean: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.0.1.running_var: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.1.0.weight: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, %features.15.conv.1.1.weight: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.1.1.bias: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.1.1.running_mean: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.1.1.running_var: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.15.conv.2.weight: Tensor[(160, 960, 1, 1), float32] /* ty=Tensor[(160, 960, 1, 1), float32] */, %features.15.conv.3.weight: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.15.conv.3.bias: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.15.conv.3.running_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.15.conv.3.running_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.16.conv.0.0.weight: Tensor[(960, 160, 1, 1), float32] /* ty=Tensor[(960, 160, 1, 1), float32] */, %features.16.conv.0.1.weight: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.0.1.bias: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.0.1.running_mean: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.0.1.running_var: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.1.0.weight: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, %features.16.conv.1.1.weight: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.1.1.bias: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.1.1.running_mean: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.1.1.running_var: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.16.conv.2.weight: Tensor[(160, 960, 1, 1), float32] /* ty=Tensor[(160, 960, 1, 1), float32] */, %features.16.conv.3.weight: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.16.conv.3.bias: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.16.conv.3.running_mean: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.16.conv.3.running_var: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %features.17.conv.0.0.weight: Tensor[(960, 160, 1, 1), float32] /* ty=Tensor[(960, 160, 1, 1), float32] */, %features.17.conv.0.1.weight: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.0.1.bias: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.0.1.running_mean: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.0.1.running_var: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.1.0.weight: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, %features.17.conv.1.1.weight: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.1.1.bias: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.1.1.running_mean: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.1.1.running_var: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %features.17.conv.2.weight: Tensor[(320, 960, 1, 1), float32] /* ty=Tensor[(320, 960, 1, 1), float32] */, %features.17.conv.3.weight: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %features.17.conv.3.bias: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %features.17.conv.3.running_mean: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %features.17.conv.3.running_var: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %features.18.0.weight: Tensor[(1280, 320, 1, 1), float32] /* ty=Tensor[(1280, 320, 1, 1), float32] */, %features.18.1.weight: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, %features.18.1.bias: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, %features.18.1.running_mean: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, %features.18.1.running_var: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, %classifier.1.weight: Tensor[(1000, 1280), float32] /* ty=Tensor[(1000, 1280), float32] */, %classifier.1.bias: Tensor[(1000), float32] /* ty=Tensor[(1000), float32] */) -> Tensor[(1, 1000), float32] {
  %46 = fn (%p0152: Tensor[(1, 3, 224, 224), float32] /* ty=Tensor[(1, 3, 224, 224), float32] */, %p1114: Tensor[(32, 3, 3, 3), float32] /* ty=Tensor[(32, 3, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 32, 112, 112), float32] {
    nn.conv2d(%p0152, %p1114, strides=[2, 2], padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3]) /* ty=Tensor[(1, 32, 112, 112), float32] */
  } /* ty=fn (Tensor[(1, 3, 224, 224), float32], Tensor[(32, 3, 3, 3), float32]) -> Tensor[(1, 32, 112, 112), float32] */;
  %47 = %46(%input0, %features.0.0.weight) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %48 = fn (%p0151: Tensor[(1, 32, 112, 112), float32] /* ty=Tensor[(1, 32, 112, 112), float32] */, %p1113: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p252: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p351: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p451: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, Primitive=1) -> (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) {
    nn.batch_norm(%p0151, %p1113, %p252, %p351, %p451) /* ty=(Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */
  } /* ty=fn (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32]) -> (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %49 = %48(%47, %features.0.1.weight, %features.0.1.bias, %features.0.1.running_mean, %features.0.1.running_var) /* ty=(Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %50 = fn (%p0150: (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) /* ty=(Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */, Primitive=1) -> Tensor[(1, 32, 112, 112), float32] {
    %45 = %p0150.0 /* ty=Tensor[(1, 32, 112, 112), float32] */;
    clip(%45, a_min=0f, a_max=6f) /* ty=Tensor[(1, 32, 112, 112), float32] */
  } /* ty=fn ((Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32])) -> Tensor[(1, 32, 112, 112), float32] */;
  %51 = fn (%p0153: Tensor[(32, 1, 3, 3), float32] /* ty=Tensor[(32, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(32, 1, 3, 3), float32] {
    reshape(%p0153, newshape=[32, 1, 3, 3]) /* ty=Tensor[(32, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(32, 1, 3, 3), float32]) -> Tensor[(32, 1, 3, 3), float32] */;
  %52 = %50(%49) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %53 = %51(%features.1.conv.0.0.weight) /* ty=Tensor[(32, 1, 3, 3), float32] */;
  %54 = fn (%p0149: Tensor[(1, 32, 112, 112), float32] /* ty=Tensor[(1, 32, 112, 112), float32] */, %p1112: Tensor[(32, 1, 3, 3), float32] /* ty=Tensor[(32, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 32, 112, 112), float32] {
    nn.conv2d(%p0149, %p1112, padding=[1, 1, 1, 1], groups=32, channels=32, kernel_size=[3, 3]) /* ty=Tensor[(1, 32, 112, 112), float32] */
  } /* ty=fn (Tensor[(1, 32, 112, 112), float32], Tensor[(32, 1, 3, 3), float32]) -> Tensor[(1, 32, 112, 112), float32] */;
  %55 = %54(%52, %53) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %56 = fn (%p0148: Tensor[(1, 32, 112, 112), float32] /* ty=Tensor[(1, 32, 112, 112), float32] */, %p1111: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p251: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p350: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p450: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, Primitive=1) -> (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) {
    nn.batch_norm(%p0148, %p1111, %p251, %p350, %p450) /* ty=(Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */
  } /* ty=fn (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32]) -> (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %57 = %56(%55, %features.1.conv.0.1.weight, %features.1.conv.0.1.bias, %features.1.conv.0.1.running_mean, %features.1.conv.0.1.running_var) /* ty=(Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %58 = fn (%p0147: (Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) /* ty=(Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32]) */, Primitive=1) -> Tensor[(1, 32, 112, 112), float32] {
    %44 = %p0147.0 /* ty=Tensor[(1, 32, 112, 112), float32] */;
    clip(%44, a_min=0f, a_max=6f) /* ty=Tensor[(1, 32, 112, 112), float32] */
  } /* ty=fn ((Tensor[(1, 32, 112, 112), float32], Tensor[(32), float32], Tensor[(32), float32])) -> Tensor[(1, 32, 112, 112), float32] */;
  %59 = %58(%57) /* ty=Tensor[(1, 32, 112, 112), float32] */;
  %60 = fn (%p0146: Tensor[(1, 32, 112, 112), float32] /* ty=Tensor[(1, 32, 112, 112), float32] */, %p1110: Tensor[(16, 32, 1, 1), float32] /* ty=Tensor[(16, 32, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 16, 112, 112), float32] {
    nn.conv2d(%p0146, %p1110, padding=[0, 0, 0, 0], channels=16, kernel_size=[1, 1]) /* ty=Tensor[(1, 16, 112, 112), float32] */
  } /* ty=fn (Tensor[(1, 32, 112, 112), float32], Tensor[(16, 32, 1, 1), float32]) -> Tensor[(1, 16, 112, 112), float32] */;
  %61 = %60(%59, %features.1.conv.1.weight) /* ty=Tensor[(1, 16, 112, 112), float32] */;
  %62 = fn (%p0145: Tensor[(1, 16, 112, 112), float32] /* ty=Tensor[(1, 16, 112, 112), float32] */, %p1109: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, %p250: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, %p349: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, %p449: Tensor[(16), float32] /* ty=Tensor[(16), float32] */, Primitive=1) -> (Tensor[(1, 16, 112, 112), float32], Tensor[(16), float32], Tensor[(16), float32]) {
    nn.batch_norm(%p0145, %p1109, %p250, %p349, %p449) /* ty=(Tensor[(1, 16, 112, 112), float32], Tensor[(16), float32], Tensor[(16), float32]) */
  } /* ty=fn (Tensor[(1, 16, 112, 112), float32], Tensor[(16), float32], Tensor[(16), float32], Tensor[(16), float32], Tensor[(16), float32]) -> (Tensor[(1, 16, 112, 112), float32], Tensor[(16), float32], Tensor[(16), float32]) */;
  %63 = %62(%61, %features.1.conv.2.weight, %features.1.conv.2.bias, %features.1.conv.2.running_mean, %features.1.conv.2.running_var) /* ty=(Tensor[(1, 16, 112, 112), float32], Tensor[(16), float32], Tensor[(16), float32]) */;
  %64 = %63.0 /* ty=Tensor[(1, 16, 112, 112), float32] */;
  %65 = fn (%p0144: Tensor[(1, 16, 112, 112), float32] /* ty=Tensor[(1, 16, 112, 112), float32] */, %p1108: Tensor[(96, 16, 1, 1), float32] /* ty=Tensor[(96, 16, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 96, 112, 112), float32] {
    nn.conv2d(%p0144, %p1108, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 112, 112), float32] */
  } /* ty=fn (Tensor[(1, 16, 112, 112), float32], Tensor[(96, 16, 1, 1), float32]) -> Tensor[(1, 96, 112, 112), float32] */;
  %66 = %65(%64, %features.2.conv.0.0.weight) /* ty=Tensor[(1, 96, 112, 112), float32] */;
  %67 = fn (%p0143: Tensor[(1, 96, 112, 112), float32] /* ty=Tensor[(1, 96, 112, 112), float32] */, %p1107: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p249: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p348: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p448: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, Primitive=1) -> (Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32]) {
    nn.batch_norm(%p0143, %p1107, %p249, %p348, %p448) /* ty=(Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32]) */
  } /* ty=fn (Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32]) -> (Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %68 = %67(%66, %features.2.conv.0.1.weight, %features.2.conv.0.1.bias, %features.2.conv.0.1.running_mean, %features.2.conv.0.1.running_var) /* ty=(Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %69 = fn (%p0142: (Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32]) /* ty=(Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32]) */, Primitive=1) -> Tensor[(1, 96, 112, 112), float32] {
    %43 = %p0142.0 /* ty=Tensor[(1, 96, 112, 112), float32] */;
    clip(%43, a_min=0f, a_max=6f) /* ty=Tensor[(1, 96, 112, 112), float32] */
  } /* ty=fn ((Tensor[(1, 96, 112, 112), float32], Tensor[(96), float32], Tensor[(96), float32])) -> Tensor[(1, 96, 112, 112), float32] */;
  %70 = fn (%p0154: Tensor[(96, 1, 3, 3), float32] /* ty=Tensor[(96, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(96, 1, 3, 3), float32] {
    reshape(%p0154, newshape=[96, 1, 3, 3]) /* ty=Tensor[(96, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(96, 1, 3, 3), float32]) -> Tensor[(96, 1, 3, 3), float32] */;
  %71 = %69(%68) /* ty=Tensor[(1, 96, 112, 112), float32] */;
  %72 = %70(%features.2.conv.1.0.weight) /* ty=Tensor[(96, 1, 3, 3), float32] */;
  %73 = fn (%p0141: Tensor[(1, 96, 112, 112), float32] /* ty=Tensor[(1, 96, 112, 112), float32] */, %p1106: Tensor[(96, 1, 3, 3), float32] /* ty=Tensor[(96, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 96, 56, 56), float32] {
    nn.conv2d(%p0141, %p1106, strides=[2, 2], padding=[1, 1, 1, 1], groups=96, channels=96, kernel_size=[3, 3]) /* ty=Tensor[(1, 96, 56, 56), float32] */
  } /* ty=fn (Tensor[(1, 96, 112, 112), float32], Tensor[(96, 1, 3, 3), float32]) -> Tensor[(1, 96, 56, 56), float32] */;
  %74 = %73(%71, %72) /* ty=Tensor[(1, 96, 56, 56), float32] */;
  %75 = fn (%p0140: Tensor[(1, 96, 56, 56), float32] /* ty=Tensor[(1, 96, 56, 56), float32] */, %p1105: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p248: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p347: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p447: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, Primitive=1) -> (Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32]) {
    nn.batch_norm(%p0140, %p1105, %p248, %p347, %p447) /* ty=(Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32]) */
  } /* ty=fn (Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32]) -> (Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %76 = %75(%74, %features.2.conv.1.1.weight, %features.2.conv.1.1.bias, %features.2.conv.1.1.running_mean, %features.2.conv.1.1.running_var) /* ty=(Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %77 = fn (%p0139: (Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32]) /* ty=(Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32]) */, Primitive=1) -> Tensor[(1, 96, 56, 56), float32] {
    %42 = %p0139.0 /* ty=Tensor[(1, 96, 56, 56), float32] */;
    clip(%42, a_min=0f, a_max=6f) /* ty=Tensor[(1, 96, 56, 56), float32] */
  } /* ty=fn ((Tensor[(1, 96, 56, 56), float32], Tensor[(96), float32], Tensor[(96), float32])) -> Tensor[(1, 96, 56, 56), float32] */;
  %78 = %77(%76) /* ty=Tensor[(1, 96, 56, 56), float32] */;
  %79 = fn (%p0138: Tensor[(1, 96, 56, 56), float32] /* ty=Tensor[(1, 96, 56, 56), float32] */, %p1104: Tensor[(24, 96, 1, 1), float32] /* ty=Tensor[(24, 96, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 24, 56, 56), float32] {
    nn.conv2d(%p0138, %p1104, padding=[0, 0, 0, 0], channels=24, kernel_size=[1, 1]) /* ty=Tensor[(1, 24, 56, 56), float32] */
  } /* ty=fn (Tensor[(1, 96, 56, 56), float32], Tensor[(24, 96, 1, 1), float32]) -> Tensor[(1, 24, 56, 56), float32] */;
  %80 = %79(%78, %features.2.conv.2.weight) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %81 = fn (%p0137: Tensor[(1, 24, 56, 56), float32] /* ty=Tensor[(1, 24, 56, 56), float32] */, %p1103: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %p247: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %p346: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %p446: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, Primitive=1) -> (Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) {
    nn.batch_norm(%p0137, %p1103, %p247, %p346, %p446) /* ty=(Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) */
  } /* ty=fn (Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32]) -> (Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) */;
  %82 = %81(%80, %features.2.conv.3.weight, %features.2.conv.3.bias, %features.2.conv.3.running_mean, %features.2.conv.3.running_var) /* ty=(Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) */;
  %83 = %82.0 /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %84 = fn (%p0136: Tensor[(1, 24, 56, 56), float32] /* ty=Tensor[(1, 24, 56, 56), float32] */, %p1102: Tensor[(144, 24, 1, 1), float32] /* ty=Tensor[(144, 24, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 144, 56, 56), float32] {
    nn.conv2d(%p0136, %p1102, padding=[0, 0, 0, 0], channels=144, kernel_size=[1, 1]) /* ty=Tensor[(1, 144, 56, 56), float32] */
  } /* ty=fn (Tensor[(1, 24, 56, 56), float32], Tensor[(144, 24, 1, 1), float32]) -> Tensor[(1, 144, 56, 56), float32] */;
  %85 = %84(%83, %features.3.conv.0.0.weight) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %86 = fn (%p0135: Tensor[(1, 144, 56, 56), float32] /* ty=Tensor[(1, 144, 56, 56), float32] */, %p1101: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p246: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p345: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p445: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, Primitive=1) -> (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) {
    nn.batch_norm(%p0135, %p1101, %p246, %p345, %p445) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */
  } /* ty=fn (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32]) -> (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %87 = %86(%85, %features.3.conv.0.1.weight, %features.3.conv.0.1.bias, %features.3.conv.0.1.running_mean, %features.3.conv.0.1.running_var) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %88 = fn (%p0134: (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */, Primitive=1) -> Tensor[(1, 144, 56, 56), float32] {
    %41 = %p0134.0 /* ty=Tensor[(1, 144, 56, 56), float32] */;
    clip(%41, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 56, 56), float32] */
  } /* ty=fn ((Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32])) -> Tensor[(1, 144, 56, 56), float32] */;
  %89 = fn (%p0155: Tensor[(144, 1, 3, 3), float32] /* ty=Tensor[(144, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(144, 1, 3, 3), float32] {
    reshape(%p0155, newshape=[144, 1, 3, 3]) /* ty=Tensor[(144, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(144, 1, 3, 3), float32]) -> Tensor[(144, 1, 3, 3), float32] */;
  %90 = %88(%87) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %91 = %89(%features.3.conv.1.0.weight) /* ty=Tensor[(144, 1, 3, 3), float32] */;
  %92 = fn (%p0133: Tensor[(1, 144, 56, 56), float32] /* ty=Tensor[(1, 144, 56, 56), float32] */, %p1100: Tensor[(144, 1, 3, 3), float32] /* ty=Tensor[(144, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 144, 56, 56), float32] {
    nn.conv2d(%p0133, %p1100, padding=[1, 1, 1, 1], groups=144, channels=144, kernel_size=[3, 3]) /* ty=Tensor[(1, 144, 56, 56), float32] */
  } /* ty=fn (Tensor[(1, 144, 56, 56), float32], Tensor[(144, 1, 3, 3), float32]) -> Tensor[(1, 144, 56, 56), float32] */;
  %93 = %92(%90, %91) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %94 = fn (%p0132: Tensor[(1, 144, 56, 56), float32] /* ty=Tensor[(1, 144, 56, 56), float32] */, %p199: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p245: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p344: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p444: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, Primitive=1) -> (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) {
    nn.batch_norm(%p0132, %p199, %p245, %p344, %p444) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */
  } /* ty=fn (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32]) -> (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %95 = %94(%93, %features.3.conv.1.1.weight, %features.3.conv.1.1.bias, %features.3.conv.1.1.running_mean, %features.3.conv.1.1.running_var) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %96 = fn (%p0131: (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */, Primitive=1) -> Tensor[(1, 144, 56, 56), float32] {
    %40 = %p0131.0 /* ty=Tensor[(1, 144, 56, 56), float32] */;
    clip(%40, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 56, 56), float32] */
  } /* ty=fn ((Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32])) -> Tensor[(1, 144, 56, 56), float32] */;
  %97 = %96(%95) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %98 = fn (%p0130: Tensor[(1, 144, 56, 56), float32] /* ty=Tensor[(1, 144, 56, 56), float32] */, %p198: Tensor[(24, 144, 1, 1), float32] /* ty=Tensor[(24, 144, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 24, 56, 56), float32] {
    nn.conv2d(%p0130, %p198, padding=[0, 0, 0, 0], channels=24, kernel_size=[1, 1]) /* ty=Tensor[(1, 24, 56, 56), float32] */
  } /* ty=fn (Tensor[(1, 144, 56, 56), float32], Tensor[(24, 144, 1, 1), float32]) -> Tensor[(1, 24, 56, 56), float32] */;
  %99 = %98(%97, %features.3.conv.2.weight) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %100 = fn (%p0129: Tensor[(1, 24, 56, 56), float32] /* ty=Tensor[(1, 24, 56, 56), float32] */, %p197: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %p244: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %p343: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, %p443: Tensor[(24), float32] /* ty=Tensor[(24), float32] */, Primitive=1) -> (Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) {
    nn.batch_norm(%p0129, %p197, %p244, %p343, %p443) /* ty=(Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) */
  } /* ty=fn (Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32]) -> (Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) */;
  %101 = %100(%99, %features.3.conv.3.weight, %features.3.conv.3.bias, %features.3.conv.3.running_mean, %features.3.conv.3.running_var) /* ty=(Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) */;
  %102 = fn (%p0128: (Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) /* ty=(Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]) */, %p196: Tensor[(1, 24, 56, 56), float32] /* ty=Tensor[(1, 24, 56, 56), float32] */, Primitive=1) -> Tensor[(1, 24, 56, 56), float32] {
    %39 = %p0128.0 /* ty=Tensor[(1, 24, 56, 56), float32] */;
    add(%p196, %39) /* ty=Tensor[(1, 24, 56, 56), float32] */
  } /* ty=fn ((Tensor[(1, 24, 56, 56), float32], Tensor[(24), float32], Tensor[(24), float32]), Tensor[(1, 24, 56, 56), float32]) -> Tensor[(1, 24, 56, 56), float32] */;
  %103 = %102(%101, %83) /* ty=Tensor[(1, 24, 56, 56), float32] */;
  %104 = fn (%p0127: Tensor[(1, 24, 56, 56), float32] /* ty=Tensor[(1, 24, 56, 56), float32] */, %p195: Tensor[(144, 24, 1, 1), float32] /* ty=Tensor[(144, 24, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 144, 56, 56), float32] {
    nn.conv2d(%p0127, %p195, padding=[0, 0, 0, 0], channels=144, kernel_size=[1, 1]) /* ty=Tensor[(1, 144, 56, 56), float32] */
  } /* ty=fn (Tensor[(1, 24, 56, 56), float32], Tensor[(144, 24, 1, 1), float32]) -> Tensor[(1, 144, 56, 56), float32] */;
  %105 = %104(%103, %features.4.conv.0.0.weight) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %106 = fn (%p0126: Tensor[(1, 144, 56, 56), float32] /* ty=Tensor[(1, 144, 56, 56), float32] */, %p194: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p243: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p342: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p442: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, Primitive=1) -> (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) {
    nn.batch_norm(%p0126, %p194, %p243, %p342, %p442) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */
  } /* ty=fn (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32]) -> (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %107 = %106(%105, %features.4.conv.0.1.weight, %features.4.conv.0.1.bias, %features.4.conv.0.1.running_mean, %features.4.conv.0.1.running_var) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %108 = fn (%p0125: (Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) /* ty=(Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32]) */, Primitive=1) -> Tensor[(1, 144, 56, 56), float32] {
    %38 = %p0125.0 /* ty=Tensor[(1, 144, 56, 56), float32] */;
    clip(%38, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 56, 56), float32] */
  } /* ty=fn ((Tensor[(1, 144, 56, 56), float32], Tensor[(144), float32], Tensor[(144), float32])) -> Tensor[(1, 144, 56, 56), float32] */;
  %109 = fn (%p0156: Tensor[(144, 1, 3, 3), float32] /* ty=Tensor[(144, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(144, 1, 3, 3), float32] {
    reshape(%p0156, newshape=[144, 1, 3, 3]) /* ty=Tensor[(144, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(144, 1, 3, 3), float32]) -> Tensor[(144, 1, 3, 3), float32] */;
  %110 = %108(%107) /* ty=Tensor[(1, 144, 56, 56), float32] */;
  %111 = %109(%features.4.conv.1.0.weight) /* ty=Tensor[(144, 1, 3, 3), float32] */;
  %112 = fn (%p0124: Tensor[(1, 144, 56, 56), float32] /* ty=Tensor[(1, 144, 56, 56), float32] */, %p193: Tensor[(144, 1, 3, 3), float32] /* ty=Tensor[(144, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 144, 28, 28), float32] {
    nn.conv2d(%p0124, %p193, strides=[2, 2], padding=[1, 1, 1, 1], groups=144, channels=144, kernel_size=[3, 3]) /* ty=Tensor[(1, 144, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 144, 56, 56), float32], Tensor[(144, 1, 3, 3), float32]) -> Tensor[(1, 144, 28, 28), float32] */;
  %113 = %112(%110, %111) /* ty=Tensor[(1, 144, 28, 28), float32] */;
  %114 = fn (%p0123: Tensor[(1, 144, 28, 28), float32] /* ty=Tensor[(1, 144, 28, 28), float32] */, %p192: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p242: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p341: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, %p441: Tensor[(144), float32] /* ty=Tensor[(144), float32] */, Primitive=1) -> (Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32]) {
    nn.batch_norm(%p0123, %p192, %p242, %p341, %p441) /* ty=(Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32]) */
  } /* ty=fn (Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32]) -> (Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %115 = %114(%113, %features.4.conv.1.1.weight, %features.4.conv.1.1.bias, %features.4.conv.1.1.running_mean, %features.4.conv.1.1.running_var) /* ty=(Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32]) */;
  %116 = fn (%p0122: (Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32]) /* ty=(Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32]) */, Primitive=1) -> Tensor[(1, 144, 28, 28), float32] {
    %37 = %p0122.0 /* ty=Tensor[(1, 144, 28, 28), float32] */;
    clip(%37, a_min=0f, a_max=6f) /* ty=Tensor[(1, 144, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 144, 28, 28), float32], Tensor[(144), float32], Tensor[(144), float32])) -> Tensor[(1, 144, 28, 28), float32] */;
  %117 = %116(%115) /* ty=Tensor[(1, 144, 28, 28), float32] */;
  %118 = fn (%p0121: Tensor[(1, 144, 28, 28), float32] /* ty=Tensor[(1, 144, 28, 28), float32] */, %p191: Tensor[(32, 144, 1, 1), float32] /* ty=Tensor[(32, 144, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 32, 28, 28), float32] {
    nn.conv2d(%p0121, %p191, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(1, 32, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 144, 28, 28), float32], Tensor[(32, 144, 1, 1), float32]) -> Tensor[(1, 32, 28, 28), float32] */;
  %119 = %118(%117, %features.4.conv.2.weight) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %120 = fn (%p0120: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, %p190: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p241: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p340: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p440: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, Primitive=1) -> (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) {
    nn.batch_norm(%p0120, %p190, %p241, %p340, %p440) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */
  } /* ty=fn (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32]) -> (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %121 = %120(%119, %features.4.conv.3.weight, %features.4.conv.3.bias, %features.4.conv.3.running_mean, %features.4.conv.3.running_var) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %122 = %121.0 /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %123 = fn (%p0119: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, %p189: Tensor[(192, 32, 1, 1), float32] /* ty=Tensor[(192, 32, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    nn.conv2d(%p0119, %p189, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 32, 28, 28), float32], Tensor[(192, 32, 1, 1), float32]) -> Tensor[(1, 192, 28, 28), float32] */;
  %124 = %123(%122, %features.5.conv.0.0.weight) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %125 = fn (%p0118: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p188: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p240: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p339: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p439: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, Primitive=1) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) {
    nn.batch_norm(%p0118, %p188, %p240, %p339, %p439) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32]) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %126 = %125(%124, %features.5.conv.0.1.weight, %features.5.conv.0.1.bias, %features.5.conv.0.1.running_mean, %features.5.conv.0.1.running_var) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %127 = fn (%p0117: (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    %36 = %p0117.0 /* ty=Tensor[(1, 192, 28, 28), float32] */;
    clip(%36, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32])) -> Tensor[(1, 192, 28, 28), float32] */;
  %128 = fn (%p0157: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 1, 3, 3), float32] {
    reshape(%p0157, newshape=[192, 1, 3, 3]) /* ty=Tensor[(192, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(192, 1, 3, 3), float32]) -> Tensor[(192, 1, 3, 3), float32] */;
  %129 = %127(%126) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %130 = %128(%features.5.conv.1.0.weight) /* ty=Tensor[(192, 1, 3, 3), float32] */;
  %131 = fn (%p0116: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p187: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    nn.conv2d(%p0116, %p187, padding=[1, 1, 1, 1], groups=192, channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192, 1, 3, 3), float32]) -> Tensor[(1, 192, 28, 28), float32] */;
  %132 = %131(%129, %130) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %133 = fn (%p0115: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p186: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p239: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p338: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p438: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, Primitive=1) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) {
    nn.batch_norm(%p0115, %p186, %p239, %p338, %p438) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32]) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %134 = %133(%132, %features.5.conv.1.1.weight, %features.5.conv.1.1.bias, %features.5.conv.1.1.running_mean, %features.5.conv.1.1.running_var) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %135 = fn (%p0114: (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    %35 = %p0114.0 /* ty=Tensor[(1, 192, 28, 28), float32] */;
    clip(%35, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32])) -> Tensor[(1, 192, 28, 28), float32] */;
  %136 = %135(%134) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %137 = fn (%p0113: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p185: Tensor[(32, 192, 1, 1), float32] /* ty=Tensor[(32, 192, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 32, 28, 28), float32] {
    nn.conv2d(%p0113, %p185, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(1, 32, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(32, 192, 1, 1), float32]) -> Tensor[(1, 32, 28, 28), float32] */;
  %138 = %137(%136, %features.5.conv.2.weight) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %139 = fn (%p0112: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, %p184: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p238: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p337: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p437: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, Primitive=1) -> (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) {
    nn.batch_norm(%p0112, %p184, %p238, %p337, %p437) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */
  } /* ty=fn (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32]) -> (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %140 = %139(%138, %features.5.conv.3.weight, %features.5.conv.3.bias, %features.5.conv.3.running_mean, %features.5.conv.3.running_var) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %141 = fn (%p0111: (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */, %p183: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, Primitive=1) -> Tensor[(1, 32, 28, 28), float32] {
    %34 = %p0111.0 /* ty=Tensor[(1, 32, 28, 28), float32] */;
    add(%p183, %34) /* ty=Tensor[(1, 32, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]), Tensor[(1, 32, 28, 28), float32]) -> Tensor[(1, 32, 28, 28), float32] */;
  %142 = %141(%140, %122) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %143 = fn (%p0110: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, %p182: Tensor[(192, 32, 1, 1), float32] /* ty=Tensor[(192, 32, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    nn.conv2d(%p0110, %p182, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 32, 28, 28), float32], Tensor[(192, 32, 1, 1), float32]) -> Tensor[(1, 192, 28, 28), float32] */;
  %144 = %143(%142, %features.6.conv.0.0.weight) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %145 = fn (%p0109: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p181: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p237: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p336: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p436: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, Primitive=1) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) {
    nn.batch_norm(%p0109, %p181, %p237, %p336, %p436) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32]) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %146 = %145(%144, %features.6.conv.0.1.weight, %features.6.conv.0.1.bias, %features.6.conv.0.1.running_mean, %features.6.conv.0.1.running_var) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %147 = fn (%p0108: (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    %33 = %p0108.0 /* ty=Tensor[(1, 192, 28, 28), float32] */;
    clip(%33, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32])) -> Tensor[(1, 192, 28, 28), float32] */;
  %148 = fn (%p0158: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 1, 3, 3), float32] {
    reshape(%p0158, newshape=[192, 1, 3, 3]) /* ty=Tensor[(192, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(192, 1, 3, 3), float32]) -> Tensor[(192, 1, 3, 3), float32] */;
  %149 = %147(%146) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %150 = %148(%features.6.conv.1.0.weight) /* ty=Tensor[(192, 1, 3, 3), float32] */;
  %151 = fn (%p0107: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p180: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    nn.conv2d(%p0107, %p180, padding=[1, 1, 1, 1], groups=192, channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192, 1, 3, 3), float32]) -> Tensor[(1, 192, 28, 28), float32] */;
  %152 = %151(%149, %150) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %153 = fn (%p0106: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p179: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p236: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p335: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p435: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, Primitive=1) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) {
    nn.batch_norm(%p0106, %p179, %p236, %p335, %p435) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32]) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %154 = %153(%152, %features.6.conv.1.1.weight, %features.6.conv.1.1.bias, %features.6.conv.1.1.running_mean, %features.6.conv.1.1.running_var) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %155 = fn (%p0105: (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    %32 = %p0105.0 /* ty=Tensor[(1, 192, 28, 28), float32] */;
    clip(%32, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32])) -> Tensor[(1, 192, 28, 28), float32] */;
  %156 = %155(%154) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %157 = fn (%p0104: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p178: Tensor[(32, 192, 1, 1), float32] /* ty=Tensor[(32, 192, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 32, 28, 28), float32] {
    nn.conv2d(%p0104, %p178, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(1, 32, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(32, 192, 1, 1), float32]) -> Tensor[(1, 32, 28, 28), float32] */;
  %158 = %157(%156, %features.6.conv.2.weight) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %159 = fn (%p0103: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, %p177: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p235: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p334: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, %p434: Tensor[(32), float32] /* ty=Tensor[(32), float32] */, Primitive=1) -> (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) {
    nn.batch_norm(%p0103, %p177, %p235, %p334, %p434) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */
  } /* ty=fn (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32]) -> (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %160 = %159(%158, %features.6.conv.3.weight, %features.6.conv.3.bias, %features.6.conv.3.running_mean, %features.6.conv.3.running_var) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */;
  %161 = fn (%p0102: (Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) /* ty=(Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]) */, %p176: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, Primitive=1) -> Tensor[(1, 32, 28, 28), float32] {
    %31 = %p0102.0 /* ty=Tensor[(1, 32, 28, 28), float32] */;
    add(%p176, %31) /* ty=Tensor[(1, 32, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 32, 28, 28), float32], Tensor[(32), float32], Tensor[(32), float32]), Tensor[(1, 32, 28, 28), float32]) -> Tensor[(1, 32, 28, 28), float32] */;
  %162 = %161(%160, %142) /* ty=Tensor[(1, 32, 28, 28), float32] */;
  %163 = fn (%p0101: Tensor[(1, 32, 28, 28), float32] /* ty=Tensor[(1, 32, 28, 28), float32] */, %p175: Tensor[(192, 32, 1, 1), float32] /* ty=Tensor[(192, 32, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    nn.conv2d(%p0101, %p175, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn (Tensor[(1, 32, 28, 28), float32], Tensor[(192, 32, 1, 1), float32]) -> Tensor[(1, 192, 28, 28), float32] */;
  %164 = %163(%162, %features.7.conv.0.0.weight) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %165 = fn (%p0100: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p174: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p234: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p333: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p433: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, Primitive=1) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) {
    nn.batch_norm(%p0100, %p174, %p234, %p333, %p433) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32]) -> (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %166 = %165(%164, %features.7.conv.0.1.weight, %features.7.conv.0.1.bias, %features.7.conv.0.1.running_mean, %features.7.conv.0.1.running_var) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %167 = fn (%p099: (Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) /* ty=(Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32]) */, Primitive=1) -> Tensor[(1, 192, 28, 28), float32] {
    %30 = %p099.0 /* ty=Tensor[(1, 192, 28, 28), float32] */;
    clip(%30, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 28, 28), float32] */
  } /* ty=fn ((Tensor[(1, 192, 28, 28), float32], Tensor[(192), float32], Tensor[(192), float32])) -> Tensor[(1, 192, 28, 28), float32] */;
  %168 = fn (%p0159: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(192, 1, 3, 3), float32] {
    reshape(%p0159, newshape=[192, 1, 3, 3]) /* ty=Tensor[(192, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(192, 1, 3, 3), float32]) -> Tensor[(192, 1, 3, 3), float32] */;
  %169 = %167(%166) /* ty=Tensor[(1, 192, 28, 28), float32] */;
  %170 = %168(%features.7.conv.1.0.weight) /* ty=Tensor[(192, 1, 3, 3), float32] */;
  %171 = fn (%p098: Tensor[(1, 192, 28, 28), float32] /* ty=Tensor[(1, 192, 28, 28), float32] */, %p173: Tensor[(192, 1, 3, 3), float32] /* ty=Tensor[(192, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 192, 14, 14), float32] {
    nn.conv2d(%p098, %p173, strides=[2, 2], padding=[1, 1, 1, 1], groups=192, channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1, 192, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 192, 28, 28), float32], Tensor[(192, 1, 3, 3), float32]) -> Tensor[(1, 192, 14, 14), float32] */;
  %172 = %171(%169, %170) /* ty=Tensor[(1, 192, 14, 14), float32] */;
  %173 = fn (%p097: Tensor[(1, 192, 14, 14), float32] /* ty=Tensor[(1, 192, 14, 14), float32] */, %p172: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p233: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p332: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, %p432: Tensor[(192), float32] /* ty=Tensor[(192), float32] */, Primitive=1) -> (Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32]) {
    nn.batch_norm(%p097, %p172, %p233, %p332, %p432) /* ty=(Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32]) */
  } /* ty=fn (Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32]) -> (Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %174 = %173(%172, %features.7.conv.1.1.weight, %features.7.conv.1.1.bias, %features.7.conv.1.1.running_mean, %features.7.conv.1.1.running_var) /* ty=(Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32]) */;
  %175 = fn (%p096: (Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32]) /* ty=(Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32]) */, Primitive=1) -> Tensor[(1, 192, 14, 14), float32] {
    %29 = %p096.0 /* ty=Tensor[(1, 192, 14, 14), float32] */;
    clip(%29, a_min=0f, a_max=6f) /* ty=Tensor[(1, 192, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 192, 14, 14), float32], Tensor[(192), float32], Tensor[(192), float32])) -> Tensor[(1, 192, 14, 14), float32] */;
  %176 = %175(%174) /* ty=Tensor[(1, 192, 14, 14), float32] */;
  %177 = fn (%p095: Tensor[(1, 192, 14, 14), float32] /* ty=Tensor[(1, 192, 14, 14), float32] */, %p171: Tensor[(64, 192, 1, 1), float32] /* ty=Tensor[(64, 192, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 64, 14, 14), float32] {
    nn.conv2d(%p095, %p171, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 192, 14, 14), float32], Tensor[(64, 192, 1, 1), float32]) -> Tensor[(1, 64, 14, 14), float32] */;
  %178 = %177(%176, %features.7.conv.2.weight) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %179 = fn (%p094: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p170: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p232: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p331: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p431: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, Primitive=1) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) {
    nn.batch_norm(%p094, %p170, %p232, %p331, %p431) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32]) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %180 = %179(%178, %features.7.conv.3.weight, %features.7.conv.3.bias, %features.7.conv.3.running_mean, %features.7.conv.3.running_var) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %181 = %180.0 /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %182 = fn (%p093: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p169: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p093, %p169, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(384, 64, 1, 1), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %183 = %182(%181, %features.8.conv.0.0.weight) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %184 = fn (%p092: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p168: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p231: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p330: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p430: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p092, %p168, %p231, %p330, %p430) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %185 = %184(%183, %features.8.conv.0.1.weight, %features.8.conv.0.1.bias, %features.8.conv.0.1.running_mean, %features.8.conv.0.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %186 = fn (%p091: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %28 = %p091.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%28, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %187 = fn (%p0160: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 1, 3, 3), float32] {
    reshape(%p0160, newshape=[384, 1, 3, 3]) /* ty=Tensor[(384, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(384, 1, 3, 3), float32]) -> Tensor[(384, 1, 3, 3), float32] */;
  %188 = %186(%185) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %189 = %187(%features.8.conv.1.0.weight) /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %190 = fn (%p090: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p167: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p090, %p167, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384, 1, 3, 3), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %191 = %190(%188, %189) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %192 = fn (%p089: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p166: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p230: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p329: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p429: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p089, %p166, %p230, %p329, %p429) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %193 = %192(%191, %features.8.conv.1.1.weight, %features.8.conv.1.1.bias, %features.8.conv.1.1.running_mean, %features.8.conv.1.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %194 = fn (%p088: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %27 = %p088.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%27, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %195 = %194(%193) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %196 = fn (%p087: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p165: Tensor[(64, 384, 1, 1), float32] /* ty=Tensor[(64, 384, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 64, 14, 14), float32] {
    nn.conv2d(%p087, %p165, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(64, 384, 1, 1), float32]) -> Tensor[(1, 64, 14, 14), float32] */;
  %197 = %196(%195, %features.8.conv.2.weight) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %198 = fn (%p086: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p164: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p229: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p328: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p428: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, Primitive=1) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) {
    nn.batch_norm(%p086, %p164, %p229, %p328, %p428) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32]) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %199 = %198(%197, %features.8.conv.3.weight, %features.8.conv.3.bias, %features.8.conv.3.running_mean, %features.8.conv.3.running_var) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %200 = fn (%p085: (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */, %p163: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, Primitive=1) -> Tensor[(1, 64, 14, 14), float32] {
    %26 = %p085.0 /* ty=Tensor[(1, 64, 14, 14), float32] */;
    add(%p163, %26) /* ty=Tensor[(1, 64, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]), Tensor[(1, 64, 14, 14), float32]) -> Tensor[(1, 64, 14, 14), float32] */;
  %201 = %200(%199, %181) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %202 = fn (%p084: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p162: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p084, %p162, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(384, 64, 1, 1), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %203 = %202(%201, %features.9.conv.0.0.weight) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %204 = fn (%p083: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p161: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p228: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p327: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p427: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p083, %p161, %p228, %p327, %p427) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %205 = %204(%203, %features.9.conv.0.1.weight, %features.9.conv.0.1.bias, %features.9.conv.0.1.running_mean, %features.9.conv.0.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %206 = fn (%p082: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %25 = %p082.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%25, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %207 = fn (%p0161: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 1, 3, 3), float32] {
    reshape(%p0161, newshape=[384, 1, 3, 3]) /* ty=Tensor[(384, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(384, 1, 3, 3), float32]) -> Tensor[(384, 1, 3, 3), float32] */;
  %208 = %206(%205) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %209 = %207(%features.9.conv.1.0.weight) /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %210 = fn (%p081: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p160: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p081, %p160, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384, 1, 3, 3), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %211 = %210(%208, %209) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %212 = fn (%p080: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p159: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p227: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p326: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p426: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p080, %p159, %p227, %p326, %p426) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %213 = %212(%211, %features.9.conv.1.1.weight, %features.9.conv.1.1.bias, %features.9.conv.1.1.running_mean, %features.9.conv.1.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %214 = fn (%p079: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %24 = %p079.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%24, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %215 = %214(%213) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %216 = fn (%p078: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p158: Tensor[(64, 384, 1, 1), float32] /* ty=Tensor[(64, 384, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 64, 14, 14), float32] {
    nn.conv2d(%p078, %p158, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(64, 384, 1, 1), float32]) -> Tensor[(1, 64, 14, 14), float32] */;
  %217 = %216(%215, %features.9.conv.2.weight) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %218 = fn (%p077: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p157: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p226: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p325: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p425: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, Primitive=1) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) {
    nn.batch_norm(%p077, %p157, %p226, %p325, %p425) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32]) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %219 = %218(%217, %features.9.conv.3.weight, %features.9.conv.3.bias, %features.9.conv.3.running_mean, %features.9.conv.3.running_var) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %220 = fn (%p076: (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */, %p156: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, Primitive=1) -> Tensor[(1, 64, 14, 14), float32] {
    %23 = %p076.0 /* ty=Tensor[(1, 64, 14, 14), float32] */;
    add(%p156, %23) /* ty=Tensor[(1, 64, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]), Tensor[(1, 64, 14, 14), float32]) -> Tensor[(1, 64, 14, 14), float32] */;
  %221 = %220(%219, %201) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %222 = fn (%p075: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p155: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p075, %p155, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(384, 64, 1, 1), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %223 = %222(%221, %features.10.conv.0.0.weight) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %224 = fn (%p074: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p154: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p225: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p324: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p424: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p074, %p154, %p225, %p324, %p424) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %225 = %224(%223, %features.10.conv.0.1.weight, %features.10.conv.0.1.bias, %features.10.conv.0.1.running_mean, %features.10.conv.0.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %226 = fn (%p073: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %22 = %p073.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%22, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %227 = fn (%p0162: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 1, 3, 3), float32] {
    reshape(%p0162, newshape=[384, 1, 3, 3]) /* ty=Tensor[(384, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(384, 1, 3, 3), float32]) -> Tensor[(384, 1, 3, 3), float32] */;
  %228 = %226(%225) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %229 = %227(%features.10.conv.1.0.weight) /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %230 = fn (%p072: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p153: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p072, %p153, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384, 1, 3, 3), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %231 = %230(%228, %229) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %232 = fn (%p071: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p152: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p224: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p323: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p423: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p071, %p152, %p224, %p323, %p423) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %233 = %232(%231, %features.10.conv.1.1.weight, %features.10.conv.1.1.bias, %features.10.conv.1.1.running_mean, %features.10.conv.1.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %234 = fn (%p070: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %21 = %p070.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%21, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %235 = %234(%233) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %236 = fn (%p069: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p151: Tensor[(64, 384, 1, 1), float32] /* ty=Tensor[(64, 384, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 64, 14, 14), float32] {
    nn.conv2d(%p069, %p151, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(1, 64, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(64, 384, 1, 1), float32]) -> Tensor[(1, 64, 14, 14), float32] */;
  %237 = %236(%235, %features.10.conv.2.weight) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %238 = fn (%p068: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p150: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p223: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p322: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, %p422: Tensor[(64), float32] /* ty=Tensor[(64), float32] */, Primitive=1) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) {
    nn.batch_norm(%p068, %p150, %p223, %p322, %p422) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32]) -> (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %239 = %238(%237, %features.10.conv.3.weight, %features.10.conv.3.bias, %features.10.conv.3.running_mean, %features.10.conv.3.running_var) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */;
  %240 = fn (%p067: (Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) /* ty=(Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]) */, %p149: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, Primitive=1) -> Tensor[(1, 64, 14, 14), float32] {
    %20 = %p067.0 /* ty=Tensor[(1, 64, 14, 14), float32] */;
    add(%p149, %20) /* ty=Tensor[(1, 64, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 64, 14, 14), float32], Tensor[(64), float32], Tensor[(64), float32]), Tensor[(1, 64, 14, 14), float32]) -> Tensor[(1, 64, 14, 14), float32] */;
  %241 = %240(%239, %221) /* ty=Tensor[(1, 64, 14, 14), float32] */;
  %242 = fn (%p066: Tensor[(1, 64, 14, 14), float32] /* ty=Tensor[(1, 64, 14, 14), float32] */, %p148: Tensor[(384, 64, 1, 1), float32] /* ty=Tensor[(384, 64, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p066, %p148, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 64, 14, 14), float32], Tensor[(384, 64, 1, 1), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %243 = %242(%241, %features.11.conv.0.0.weight) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %244 = fn (%p065: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p147: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p222: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p321: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p421: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p065, %p147, %p222, %p321, %p421) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %245 = %244(%243, %features.11.conv.0.1.weight, %features.11.conv.0.1.bias, %features.11.conv.0.1.running_mean, %features.11.conv.0.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %246 = fn (%p064: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %19 = %p064.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%19, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %247 = fn (%p0163: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(384, 1, 3, 3), float32] {
    reshape(%p0163, newshape=[384, 1, 3, 3]) /* ty=Tensor[(384, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(384, 1, 3, 3), float32]) -> Tensor[(384, 1, 3, 3), float32] */;
  %248 = %246(%245) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %249 = %247(%features.11.conv.1.0.weight) /* ty=Tensor[(384, 1, 3, 3), float32] */;
  %250 = fn (%p063: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p146: Tensor[(384, 1, 3, 3), float32] /* ty=Tensor[(384, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    nn.conv2d(%p063, %p146, padding=[1, 1, 1, 1], groups=384, channels=384, kernel_size=[3, 3]) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384, 1, 3, 3), float32]) -> Tensor[(1, 384, 14, 14), float32] */;
  %251 = %250(%248, %249) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %252 = fn (%p062: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p145: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p221: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p320: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, %p420: Tensor[(384), float32] /* ty=Tensor[(384), float32] */, Primitive=1) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) {
    nn.batch_norm(%p062, %p145, %p221, %p320, %p420) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32]) -> (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %253 = %252(%251, %features.11.conv.1.1.weight, %features.11.conv.1.1.bias, %features.11.conv.1.1.running_mean, %features.11.conv.1.1.running_var) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */;
  %254 = fn (%p061: (Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) /* ty=(Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32]) */, Primitive=1) -> Tensor[(1, 384, 14, 14), float32] {
    %18 = %p061.0 /* ty=Tensor[(1, 384, 14, 14), float32] */;
    clip(%18, a_min=0f, a_max=6f) /* ty=Tensor[(1, 384, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 384, 14, 14), float32], Tensor[(384), float32], Tensor[(384), float32])) -> Tensor[(1, 384, 14, 14), float32] */;
  %255 = %254(%253) /* ty=Tensor[(1, 384, 14, 14), float32] */;
  %256 = fn (%p060: Tensor[(1, 384, 14, 14), float32] /* ty=Tensor[(1, 384, 14, 14), float32] */, %p144: Tensor[(96, 384, 1, 1), float32] /* ty=Tensor[(96, 384, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 96, 14, 14), float32] {
    nn.conv2d(%p060, %p144, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 384, 14, 14), float32], Tensor[(96, 384, 1, 1), float32]) -> Tensor[(1, 96, 14, 14), float32] */;
  %257 = %256(%255, %features.11.conv.2.weight) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %258 = fn (%p059: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, %p143: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p220: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p319: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p419: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, Primitive=1) -> (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) {
    nn.batch_norm(%p059, %p143, %p220, %p319, %p419) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */
  } /* ty=fn (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32]) -> (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %259 = %258(%257, %features.11.conv.3.weight, %features.11.conv.3.bias, %features.11.conv.3.running_mean, %features.11.conv.3.running_var) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %260 = %259.0 /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %261 = fn (%p058: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, %p142: Tensor[(576, 96, 1, 1), float32] /* ty=Tensor[(576, 96, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    nn.conv2d(%p058, %p142, padding=[0, 0, 0, 0], channels=576, kernel_size=[1, 1]) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 96, 14, 14), float32], Tensor[(576, 96, 1, 1), float32]) -> Tensor[(1, 576, 14, 14), float32] */;
  %262 = %261(%260, %features.12.conv.0.0.weight) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %263 = fn (%p057: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p141: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p219: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p318: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p418: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, Primitive=1) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) {
    nn.batch_norm(%p057, %p141, %p219, %p318, %p418) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32]) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %264 = %263(%262, %features.12.conv.0.1.weight, %features.12.conv.0.1.bias, %features.12.conv.0.1.running_mean, %features.12.conv.0.1.running_var) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %265 = fn (%p056: (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    %17 = %p056.0 /* ty=Tensor[(1, 576, 14, 14), float32] */;
    clip(%17, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32])) -> Tensor[(1, 576, 14, 14), float32] */;
  %266 = fn (%p0164: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(576, 1, 3, 3), float32] {
    reshape(%p0164, newshape=[576, 1, 3, 3]) /* ty=Tensor[(576, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(576, 1, 3, 3), float32]) -> Tensor[(576, 1, 3, 3), float32] */;
  %267 = %265(%264) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %268 = %266(%features.12.conv.1.0.weight) /* ty=Tensor[(576, 1, 3, 3), float32] */;
  %269 = fn (%p055: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p140: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    nn.conv2d(%p055, %p140, padding=[1, 1, 1, 1], groups=576, channels=576, kernel_size=[3, 3]) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576, 1, 3, 3), float32]) -> Tensor[(1, 576, 14, 14), float32] */;
  %270 = %269(%267, %268) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %271 = fn (%p054: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p139: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p218: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p317: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p417: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, Primitive=1) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) {
    nn.batch_norm(%p054, %p139, %p218, %p317, %p417) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32]) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %272 = %271(%270, %features.12.conv.1.1.weight, %features.12.conv.1.1.bias, %features.12.conv.1.1.running_mean, %features.12.conv.1.1.running_var) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %273 = fn (%p053: (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    %16 = %p053.0 /* ty=Tensor[(1, 576, 14, 14), float32] */;
    clip(%16, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32])) -> Tensor[(1, 576, 14, 14), float32] */;
  %274 = %273(%272) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %275 = fn (%p052: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p138: Tensor[(96, 576, 1, 1), float32] /* ty=Tensor[(96, 576, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 96, 14, 14), float32] {
    nn.conv2d(%p052, %p138, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(96, 576, 1, 1), float32]) -> Tensor[(1, 96, 14, 14), float32] */;
  %276 = %275(%274, %features.12.conv.2.weight) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %277 = fn (%p051: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, %p137: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p217: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p316: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p416: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, Primitive=1) -> (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) {
    nn.batch_norm(%p051, %p137, %p217, %p316, %p416) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */
  } /* ty=fn (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32]) -> (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %278 = %277(%276, %features.12.conv.3.weight, %features.12.conv.3.bias, %features.12.conv.3.running_mean, %features.12.conv.3.running_var) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %279 = fn (%p050: (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */, %p136: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, Primitive=1) -> Tensor[(1, 96, 14, 14), float32] {
    %15 = %p050.0 /* ty=Tensor[(1, 96, 14, 14), float32] */;
    add(%p136, %15) /* ty=Tensor[(1, 96, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]), Tensor[(1, 96, 14, 14), float32]) -> Tensor[(1, 96, 14, 14), float32] */;
  %280 = %279(%278, %260) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %281 = fn (%p049: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, %p135: Tensor[(576, 96, 1, 1), float32] /* ty=Tensor[(576, 96, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    nn.conv2d(%p049, %p135, padding=[0, 0, 0, 0], channels=576, kernel_size=[1, 1]) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 96, 14, 14), float32], Tensor[(576, 96, 1, 1), float32]) -> Tensor[(1, 576, 14, 14), float32] */;
  %282 = %281(%280, %features.13.conv.0.0.weight) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %283 = fn (%p048: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p134: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p216: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p315: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p415: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, Primitive=1) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) {
    nn.batch_norm(%p048, %p134, %p216, %p315, %p415) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32]) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %284 = %283(%282, %features.13.conv.0.1.weight, %features.13.conv.0.1.bias, %features.13.conv.0.1.running_mean, %features.13.conv.0.1.running_var) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %285 = fn (%p047: (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    %14 = %p047.0 /* ty=Tensor[(1, 576, 14, 14), float32] */;
    clip(%14, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32])) -> Tensor[(1, 576, 14, 14), float32] */;
  %286 = fn (%p0165: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(576, 1, 3, 3), float32] {
    reshape(%p0165, newshape=[576, 1, 3, 3]) /* ty=Tensor[(576, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(576, 1, 3, 3), float32]) -> Tensor[(576, 1, 3, 3), float32] */;
  %287 = %285(%284) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %288 = %286(%features.13.conv.1.0.weight) /* ty=Tensor[(576, 1, 3, 3), float32] */;
  %289 = fn (%p046: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p133: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    nn.conv2d(%p046, %p133, padding=[1, 1, 1, 1], groups=576, channels=576, kernel_size=[3, 3]) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576, 1, 3, 3), float32]) -> Tensor[(1, 576, 14, 14), float32] */;
  %290 = %289(%287, %288) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %291 = fn (%p045: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p132: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p215: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p314: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p414: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, Primitive=1) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) {
    nn.batch_norm(%p045, %p132, %p215, %p314, %p414) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32]) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %292 = %291(%290, %features.13.conv.1.1.weight, %features.13.conv.1.1.bias, %features.13.conv.1.1.running_mean, %features.13.conv.1.1.running_var) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %293 = fn (%p044: (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    %13 = %p044.0 /* ty=Tensor[(1, 576, 14, 14), float32] */;
    clip(%13, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32])) -> Tensor[(1, 576, 14, 14), float32] */;
  %294 = %293(%292) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %295 = fn (%p043: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p131: Tensor[(96, 576, 1, 1), float32] /* ty=Tensor[(96, 576, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 96, 14, 14), float32] {
    nn.conv2d(%p043, %p131, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(1, 96, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(96, 576, 1, 1), float32]) -> Tensor[(1, 96, 14, 14), float32] */;
  %296 = %295(%294, %features.13.conv.2.weight) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %297 = fn (%p042: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, %p130: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p214: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p313: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, %p413: Tensor[(96), float32] /* ty=Tensor[(96), float32] */, Primitive=1) -> (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) {
    nn.batch_norm(%p042, %p130, %p214, %p313, %p413) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */
  } /* ty=fn (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32]) -> (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %298 = %297(%296, %features.13.conv.3.weight, %features.13.conv.3.bias, %features.13.conv.3.running_mean, %features.13.conv.3.running_var) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */;
  %299 = fn (%p041: (Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) /* ty=(Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]) */, %p129: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, Primitive=1) -> Tensor[(1, 96, 14, 14), float32] {
    %12 = %p041.0 /* ty=Tensor[(1, 96, 14, 14), float32] */;
    add(%p129, %12) /* ty=Tensor[(1, 96, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 96, 14, 14), float32], Tensor[(96), float32], Tensor[(96), float32]), Tensor[(1, 96, 14, 14), float32]) -> Tensor[(1, 96, 14, 14), float32] */;
  %300 = %299(%298, %280) /* ty=Tensor[(1, 96, 14, 14), float32] */;
  %301 = fn (%p040: Tensor[(1, 96, 14, 14), float32] /* ty=Tensor[(1, 96, 14, 14), float32] */, %p128: Tensor[(576, 96, 1, 1), float32] /* ty=Tensor[(576, 96, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    nn.conv2d(%p040, %p128, padding=[0, 0, 0, 0], channels=576, kernel_size=[1, 1]) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn (Tensor[(1, 96, 14, 14), float32], Tensor[(576, 96, 1, 1), float32]) -> Tensor[(1, 576, 14, 14), float32] */;
  %302 = %301(%300, %features.14.conv.0.0.weight) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %303 = fn (%p039: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p127: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p213: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p312: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p412: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, Primitive=1) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) {
    nn.batch_norm(%p039, %p127, %p213, %p312, %p412) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32]) -> (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %304 = %303(%302, %features.14.conv.0.1.weight, %features.14.conv.0.1.bias, %features.14.conv.0.1.running_mean, %features.14.conv.0.1.running_var) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %305 = fn (%p038: (Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) /* ty=(Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32]) */, Primitive=1) -> Tensor[(1, 576, 14, 14), float32] {
    %11 = %p038.0 /* ty=Tensor[(1, 576, 14, 14), float32] */;
    clip(%11, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 14, 14), float32] */
  } /* ty=fn ((Tensor[(1, 576, 14, 14), float32], Tensor[(576), float32], Tensor[(576), float32])) -> Tensor[(1, 576, 14, 14), float32] */;
  %306 = fn (%p0166: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(576, 1, 3, 3), float32] {
    reshape(%p0166, newshape=[576, 1, 3, 3]) /* ty=Tensor[(576, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(576, 1, 3, 3), float32]) -> Tensor[(576, 1, 3, 3), float32] */;
  %307 = %305(%304) /* ty=Tensor[(1, 576, 14, 14), float32] */;
  %308 = %306(%features.14.conv.1.0.weight) /* ty=Tensor[(576, 1, 3, 3), float32] */;
  %309 = fn (%p037: Tensor[(1, 576, 14, 14), float32] /* ty=Tensor[(1, 576, 14, 14), float32] */, %p126: Tensor[(576, 1, 3, 3), float32] /* ty=Tensor[(576, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 576, 7, 7), float32] {
    nn.conv2d(%p037, %p126, strides=[2, 2], padding=[1, 1, 1, 1], groups=576, channels=576, kernel_size=[3, 3]) /* ty=Tensor[(1, 576, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 576, 14, 14), float32], Tensor[(576, 1, 3, 3), float32]) -> Tensor[(1, 576, 7, 7), float32] */;
  %310 = %309(%307, %308) /* ty=Tensor[(1, 576, 7, 7), float32] */;
  %311 = fn (%p036: Tensor[(1, 576, 7, 7), float32] /* ty=Tensor[(1, 576, 7, 7), float32] */, %p125: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p212: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p311: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, %p411: Tensor[(576), float32] /* ty=Tensor[(576), float32] */, Primitive=1) -> (Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32]) {
    nn.batch_norm(%p036, %p125, %p212, %p311, %p411) /* ty=(Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32]) */
  } /* ty=fn (Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32]) -> (Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %312 = %311(%310, %features.14.conv.1.1.weight, %features.14.conv.1.1.bias, %features.14.conv.1.1.running_mean, %features.14.conv.1.1.running_var) /* ty=(Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32]) */;
  %313 = fn (%p035: (Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32]) /* ty=(Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32]) */, Primitive=1) -> Tensor[(1, 576, 7, 7), float32] {
    %10 = %p035.0 /* ty=Tensor[(1, 576, 7, 7), float32] */;
    clip(%10, a_min=0f, a_max=6f) /* ty=Tensor[(1, 576, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 576, 7, 7), float32], Tensor[(576), float32], Tensor[(576), float32])) -> Tensor[(1, 576, 7, 7), float32] */;
  %314 = %313(%312) /* ty=Tensor[(1, 576, 7, 7), float32] */;
  %315 = fn (%p034: Tensor[(1, 576, 7, 7), float32] /* ty=Tensor[(1, 576, 7, 7), float32] */, %p124: Tensor[(160, 576, 1, 1), float32] /* ty=Tensor[(160, 576, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 160, 7, 7), float32] {
    nn.conv2d(%p034, %p124, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1, 160, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 576, 7, 7), float32], Tensor[(160, 576, 1, 1), float32]) -> Tensor[(1, 160, 7, 7), float32] */;
  %316 = %315(%314, %features.14.conv.2.weight) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %317 = fn (%p033: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, %p123: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p211: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p310: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p410: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, Primitive=1) -> (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) {
    nn.batch_norm(%p033, %p123, %p211, %p310, %p410) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */
  } /* ty=fn (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32]) -> (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %318 = %317(%316, %features.14.conv.3.weight, %features.14.conv.3.bias, %features.14.conv.3.running_mean, %features.14.conv.3.running_var) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %319 = %318.0 /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %320 = fn (%p032: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, %p122: Tensor[(960, 160, 1, 1), float32] /* ty=Tensor[(960, 160, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    nn.conv2d(%p032, %p122, padding=[0, 0, 0, 0], channels=960, kernel_size=[1, 1]) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 160, 7, 7), float32], Tensor[(960, 160, 1, 1), float32]) -> Tensor[(1, 960, 7, 7), float32] */;
  %321 = %320(%319, %features.15.conv.0.0.weight) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %322 = fn (%p031: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p121: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p210: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p39: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p49: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, Primitive=1) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) {
    nn.batch_norm(%p031, %p121, %p210, %p39, %p49) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32]) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %323 = %322(%321, %features.15.conv.0.1.weight, %features.15.conv.0.1.bias, %features.15.conv.0.1.running_mean, %features.15.conv.0.1.running_var) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %324 = fn (%p030: (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    %9 = %p030.0 /* ty=Tensor[(1, 960, 7, 7), float32] */;
    clip(%9, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32])) -> Tensor[(1, 960, 7, 7), float32] */;
  %325 = fn (%p0167: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(960, 1, 3, 3), float32] {
    reshape(%p0167, newshape=[960, 1, 3, 3]) /* ty=Tensor[(960, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(960, 1, 3, 3), float32]) -> Tensor[(960, 1, 3, 3), float32] */;
  %326 = %324(%323) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %327 = %325(%features.15.conv.1.0.weight) /* ty=Tensor[(960, 1, 3, 3), float32] */;
  %328 = fn (%p029: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p120: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    nn.conv2d(%p029, %p120, padding=[1, 1, 1, 1], groups=960, channels=960, kernel_size=[3, 3]) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960, 1, 3, 3), float32]) -> Tensor[(1, 960, 7, 7), float32] */;
  %329 = %328(%326, %327) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %330 = fn (%p028: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p119: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p29: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p38: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p48: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, Primitive=1) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) {
    nn.batch_norm(%p028, %p119, %p29, %p38, %p48) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32]) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %331 = %330(%329, %features.15.conv.1.1.weight, %features.15.conv.1.1.bias, %features.15.conv.1.1.running_mean, %features.15.conv.1.1.running_var) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %332 = fn (%p027: (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    %8 = %p027.0 /* ty=Tensor[(1, 960, 7, 7), float32] */;
    clip(%8, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32])) -> Tensor[(1, 960, 7, 7), float32] */;
  %333 = %332(%331) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %334 = fn (%p026: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p118: Tensor[(160, 960, 1, 1), float32] /* ty=Tensor[(160, 960, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 160, 7, 7), float32] {
    nn.conv2d(%p026, %p118, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1, 160, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(160, 960, 1, 1), float32]) -> Tensor[(1, 160, 7, 7), float32] */;
  %335 = %334(%333, %features.15.conv.2.weight) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %336 = fn (%p025: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, %p117: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p28: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p37: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p47: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, Primitive=1) -> (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) {
    nn.batch_norm(%p025, %p117, %p28, %p37, %p47) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */
  } /* ty=fn (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32]) -> (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %337 = %336(%335, %features.15.conv.3.weight, %features.15.conv.3.bias, %features.15.conv.3.running_mean, %features.15.conv.3.running_var) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %338 = fn (%p024: (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */, %p116: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, Primitive=1) -> Tensor[(1, 160, 7, 7), float32] {
    %7 = %p024.0 /* ty=Tensor[(1, 160, 7, 7), float32] */;
    add(%p116, %7) /* ty=Tensor[(1, 160, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]), Tensor[(1, 160, 7, 7), float32]) -> Tensor[(1, 160, 7, 7), float32] */;
  %339 = %338(%337, %319) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %340 = fn (%p023: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, %p115: Tensor[(960, 160, 1, 1), float32] /* ty=Tensor[(960, 160, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    nn.conv2d(%p023, %p115, padding=[0, 0, 0, 0], channels=960, kernel_size=[1, 1]) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 160, 7, 7), float32], Tensor[(960, 160, 1, 1), float32]) -> Tensor[(1, 960, 7, 7), float32] */;
  %341 = %340(%339, %features.16.conv.0.0.weight) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %342 = fn (%p022: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p114: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p27: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p36: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p46: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, Primitive=1) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) {
    nn.batch_norm(%p022, %p114, %p27, %p36, %p46) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32]) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %343 = %342(%341, %features.16.conv.0.1.weight, %features.16.conv.0.1.bias, %features.16.conv.0.1.running_mean, %features.16.conv.0.1.running_var) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %344 = fn (%p021: (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    %6 = %p021.0 /* ty=Tensor[(1, 960, 7, 7), float32] */;
    clip(%6, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32])) -> Tensor[(1, 960, 7, 7), float32] */;
  %345 = fn (%p0168: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(960, 1, 3, 3), float32] {
    reshape(%p0168, newshape=[960, 1, 3, 3]) /* ty=Tensor[(960, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(960, 1, 3, 3), float32]) -> Tensor[(960, 1, 3, 3), float32] */;
  %346 = %344(%343) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %347 = %345(%features.16.conv.1.0.weight) /* ty=Tensor[(960, 1, 3, 3), float32] */;
  %348 = fn (%p020: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p113: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    nn.conv2d(%p020, %p113, padding=[1, 1, 1, 1], groups=960, channels=960, kernel_size=[3, 3]) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960, 1, 3, 3), float32]) -> Tensor[(1, 960, 7, 7), float32] */;
  %349 = %348(%346, %347) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %350 = fn (%p019: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p112: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p26: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p35: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p45: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, Primitive=1) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) {
    nn.batch_norm(%p019, %p112, %p26, %p35, %p45) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32]) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %351 = %350(%349, %features.16.conv.1.1.weight, %features.16.conv.1.1.bias, %features.16.conv.1.1.running_mean, %features.16.conv.1.1.running_var) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %352 = fn (%p018: (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    %5 = %p018.0 /* ty=Tensor[(1, 960, 7, 7), float32] */;
    clip(%5, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32])) -> Tensor[(1, 960, 7, 7), float32] */;
  %353 = %352(%351) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %354 = fn (%p017: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p111: Tensor[(160, 960, 1, 1), float32] /* ty=Tensor[(160, 960, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 160, 7, 7), float32] {
    nn.conv2d(%p017, %p111, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(1, 160, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(160, 960, 1, 1), float32]) -> Tensor[(1, 160, 7, 7), float32] */;
  %355 = %354(%353, %features.16.conv.2.weight) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %356 = fn (%p016: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, %p110: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p25: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p34: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, %p44: Tensor[(160), float32] /* ty=Tensor[(160), float32] */, Primitive=1) -> (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) {
    nn.batch_norm(%p016, %p110, %p25, %p34, %p44) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */
  } /* ty=fn (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32]) -> (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %357 = %356(%355, %features.16.conv.3.weight, %features.16.conv.3.bias, %features.16.conv.3.running_mean, %features.16.conv.3.running_var) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */;
  %358 = fn (%p015: (Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) /* ty=(Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]) */, %p19: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, Primitive=1) -> Tensor[(1, 160, 7, 7), float32] {
    %4 = %p015.0 /* ty=Tensor[(1, 160, 7, 7), float32] */;
    add(%p19, %4) /* ty=Tensor[(1, 160, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 160, 7, 7), float32], Tensor[(160), float32], Tensor[(160), float32]), Tensor[(1, 160, 7, 7), float32]) -> Tensor[(1, 160, 7, 7), float32] */;
  %359 = %358(%357, %339) /* ty=Tensor[(1, 160, 7, 7), float32] */;
  %360 = fn (%p014: Tensor[(1, 160, 7, 7), float32] /* ty=Tensor[(1, 160, 7, 7), float32] */, %p18: Tensor[(960, 160, 1, 1), float32] /* ty=Tensor[(960, 160, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    nn.conv2d(%p014, %p18, padding=[0, 0, 0, 0], channels=960, kernel_size=[1, 1]) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 160, 7, 7), float32], Tensor[(960, 160, 1, 1), float32]) -> Tensor[(1, 960, 7, 7), float32] */;
  %361 = %360(%359, %features.17.conv.0.0.weight) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %362 = fn (%p013: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p17: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p24: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p33: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p43: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, Primitive=1) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) {
    nn.batch_norm(%p013, %p17, %p24, %p33, %p43) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32]) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %363 = %362(%361, %features.17.conv.0.1.weight, %features.17.conv.0.1.bias, %features.17.conv.0.1.running_mean, %features.17.conv.0.1.running_var) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %364 = fn (%p012: (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    %3 = %p012.0 /* ty=Tensor[(1, 960, 7, 7), float32] */;
    clip(%3, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32])) -> Tensor[(1, 960, 7, 7), float32] */;
  %365 = fn (%p0169: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(960, 1, 3, 3), float32] {
    reshape(%p0169, newshape=[960, 1, 3, 3]) /* ty=Tensor[(960, 1, 3, 3), float32] */
  } /* ty=fn (Tensor[(960, 1, 3, 3), float32]) -> Tensor[(960, 1, 3, 3), float32] */;
  %366 = %364(%363) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %367 = %365(%features.17.conv.1.0.weight) /* ty=Tensor[(960, 1, 3, 3), float32] */;
  %368 = fn (%p011: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p16: Tensor[(960, 1, 3, 3), float32] /* ty=Tensor[(960, 1, 3, 3), float32] */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    nn.conv2d(%p011, %p16, padding=[1, 1, 1, 1], groups=960, channels=960, kernel_size=[3, 3]) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960, 1, 3, 3), float32]) -> Tensor[(1, 960, 7, 7), float32] */;
  %369 = %368(%366, %367) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %370 = fn (%p010: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p15: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p23: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p32: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, %p42: Tensor[(960), float32] /* ty=Tensor[(960), float32] */, Primitive=1) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) {
    nn.batch_norm(%p010, %p15, %p23, %p32, %p42) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32]) -> (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %371 = %370(%369, %features.17.conv.1.1.weight, %features.17.conv.1.1.bias, %features.17.conv.1.1.running_mean, %features.17.conv.1.1.running_var) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */;
  %372 = fn (%p09: (Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) /* ty=(Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32]) */, Primitive=1) -> Tensor[(1, 960, 7, 7), float32] {
    %2 = %p09.0 /* ty=Tensor[(1, 960, 7, 7), float32] */;
    clip(%2, a_min=0f, a_max=6f) /* ty=Tensor[(1, 960, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 960, 7, 7), float32], Tensor[(960), float32], Tensor[(960), float32])) -> Tensor[(1, 960, 7, 7), float32] */;
  %373 = %372(%371) /* ty=Tensor[(1, 960, 7, 7), float32] */;
  %374 = fn (%p08: Tensor[(1, 960, 7, 7), float32] /* ty=Tensor[(1, 960, 7, 7), float32] */, %p14: Tensor[(320, 960, 1, 1), float32] /* ty=Tensor[(320, 960, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 320, 7, 7), float32] {
    nn.conv2d(%p08, %p14, padding=[0, 0, 0, 0], channels=320, kernel_size=[1, 1]) /* ty=Tensor[(1, 320, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 960, 7, 7), float32], Tensor[(320, 960, 1, 1), float32]) -> Tensor[(1, 320, 7, 7), float32] */;
  %375 = %374(%373, %features.17.conv.2.weight) /* ty=Tensor[(1, 320, 7, 7), float32] */;
  %376 = fn (%p07: Tensor[(1, 320, 7, 7), float32] /* ty=Tensor[(1, 320, 7, 7), float32] */, %p13: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %p22: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %p31: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, %p41: Tensor[(320), float32] /* ty=Tensor[(320), float32] */, Primitive=1) -> (Tensor[(1, 320, 7, 7), float32], Tensor[(320), float32], Tensor[(320), float32]) {
    nn.batch_norm(%p07, %p13, %p22, %p31, %p41) /* ty=(Tensor[(1, 320, 7, 7), float32], Tensor[(320), float32], Tensor[(320), float32]) */
  } /* ty=fn (Tensor[(1, 320, 7, 7), float32], Tensor[(320), float32], Tensor[(320), float32], Tensor[(320), float32], Tensor[(320), float32]) -> (Tensor[(1, 320, 7, 7), float32], Tensor[(320), float32], Tensor[(320), float32]) */;
  %377 = %376(%375, %features.17.conv.3.weight, %features.17.conv.3.bias, %features.17.conv.3.running_mean, %features.17.conv.3.running_var) /* ty=(Tensor[(1, 320, 7, 7), float32], Tensor[(320), float32], Tensor[(320), float32]) */;
  %378 = %377.0 /* ty=Tensor[(1, 320, 7, 7), float32] */;
  %379 = fn (%p06: Tensor[(1, 320, 7, 7), float32] /* ty=Tensor[(1, 320, 7, 7), float32] */, %p12: Tensor[(1280, 320, 1, 1), float32] /* ty=Tensor[(1280, 320, 1, 1), float32] */, Primitive=1) -> Tensor[(1, 1280, 7, 7), float32] {
    nn.conv2d(%p06, %p12, padding=[0, 0, 0, 0], channels=1280, kernel_size=[1, 1]) /* ty=Tensor[(1, 1280, 7, 7), float32] */
  } /* ty=fn (Tensor[(1, 320, 7, 7), float32], Tensor[(1280, 320, 1, 1), float32]) -> Tensor[(1, 1280, 7, 7), float32] */;
  %380 = %379(%378, %features.18.0.weight) /* ty=Tensor[(1, 1280, 7, 7), float32] */;
  %381 = fn (%p05: Tensor[(1, 1280, 7, 7), float32] /* ty=Tensor[(1, 1280, 7, 7), float32] */, %p11: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, %p21: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, %p3: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, %p4: Tensor[(1280), float32] /* ty=Tensor[(1280), float32] */, Primitive=1) -> (Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32]) {
    nn.batch_norm(%p05, %p11, %p21, %p3, %p4) /* ty=(Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32]) */
  } /* ty=fn (Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(1280), float32]) -> (Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32]) */;
  %382 = %381(%380, %features.18.1.weight, %features.18.1.bias, %features.18.1.running_mean, %features.18.1.running_var) /* ty=(Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32]) */;
  %383 = fn (%p04: (Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32]) /* ty=(Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32]) */, Primitive=1) -> Tensor[(1, 1280, 7, 7), float32] {
    %1 = %p04.0 /* ty=Tensor[(1, 1280, 7, 7), float32] */;
    clip(%1, a_min=0f, a_max=6f) /* ty=Tensor[(1, 1280, 7, 7), float32] */
  } /* ty=fn ((Tensor[(1, 1280, 7, 7), float32], Tensor[(1280), float32], Tensor[(1280), float32])) -> Tensor[(1, 1280, 7, 7), float32] */;
  %384 = %383(%382) /* ty=Tensor[(1, 1280, 7, 7), float32] */;
  %385 = fn (%p03: Tensor[(1, 1280, 7, 7), float32] /* ty=Tensor[(1, 1280, 7, 7), float32] */, Primitive=1) -> Tensor[(1, 1280, 1, 1), float32] {
    nn.adaptive_avg_pool2d(%p03, output_size=[1, 1]) /* ty=Tensor[(1, 1280, 1, 1), float32] */
  } /* ty=fn (Tensor[(1, 1280, 7, 7), float32]) -> Tensor[(1, 1280, 1, 1), float32] */;
  %386 = %385(%384) /* ty=Tensor[(1, 1280, 1, 1), float32] */;
  %387 = fn (%p02: Tensor[(1, 1280, 1, 1), float32] /* ty=Tensor[(1, 1280, 1, 1), float32] */, Primitive=1, relay.reshape_only=1) -> Tensor[(1, 1280), float32] {
    reshape(%p02, newshape=[1, -1]) /* ty=Tensor[(1, 1280), float32] */
  } /* ty=fn (Tensor[(1, 1280, 1, 1), float32]) -> Tensor[(1, 1280), float32] */;
  %388 = %387(%386) /* ty=Tensor[(1, 1280), float32] */;
  %389 = fn (%p01: Tensor[(1, 1280), float32] /* ty=Tensor[(1, 1280), float32] */, Primitive=1) -> (Tensor[(1, 1280), float32], Tensor[(1, 1280), float32]) {
    nn.dropout(%p01, rate=0.2f) /* ty=(Tensor[(1, 1280), float32], Tensor[(1, 1280), float32]) */
  } /* ty=fn (Tensor[(1, 1280), float32]) -> (Tensor[(1, 1280), float32], Tensor[(1, 1280), float32]) */;
  %390 = %389(%388) /* ty=(Tensor[(1, 1280), float32], Tensor[(1, 1280), float32]) */;
  %392 = fn (%p0170: Tensor[(1000, 1280), float32] /* ty=Tensor[(1000, 1280), float32] */, Primitive=1) -> Tensor[(1000, 1280), float32] {
    %391 = transpose(%p0170, axes=[1, 0]) /* ty=Tensor[(1280, 1000), float32] */;
    transpose(%391, axes=[1, 0]) /* ty=Tensor[(1000, 1280), float32] */
  } /* ty=fn (Tensor[(1000, 1280), float32]) -> Tensor[(1000, 1280), float32] */;
  %393 = %390.0 /* ty=Tensor[(1, 1280), float32] */;
  %394 = %392(%classifier.1.weight) /* ty=Tensor[(1000, 1280), float32] */;
  %395 = fn (%p0: Tensor[(1, 1280), float32] /* ty=Tensor[(1, 1280), float32] */, %p1: Tensor[(1000, 1280), float32] /* ty=Tensor[(1000, 1280), float32] */, %p2: Tensor[(1000), float32] /* ty=Tensor[(1000), float32] */, Primitive=1) -> Tensor[(1, 1000), float32] {
    %0 = nn.dense(%p0, %p1, units=1000) /* ty=Tensor[(1, 1000), float32] */;
    add(%0, %p2) /* ty=Tensor[(1, 1000), float32] */
  } /* ty=fn (Tensor[(1, 1280), float32], Tensor[(1000, 1280), float32], Tensor[(1000), float32]) -> Tensor[(1, 1000), float32] */;
  %395(%393, %394, %classifier.1.bias) /* ty=Tensor[(1, 1000), float32] */
} /* ty=fn (Tensor[(1, 3, 224, 224), float32], Tensor[(32, 3, 3, 3), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32, 1, 3, 3), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(16, 32, 1, 1), float32], Tensor[(16), float32], Tensor[(16), float32], Tensor[(16), float32], Tensor[(16), float32], Tensor[(96, 16, 1, 1), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96, 1, 3, 3), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(24, 96, 1, 1), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(144, 24, 1, 1), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144, 1, 3, 3), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(24, 144, 1, 1), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(24), float32], Tensor[(144, 24, 1, 1), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144, 1, 3, 3), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(144), float32], Tensor[(32, 144, 1, 1), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(192, 32, 1, 1), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192, 1, 3, 3), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(32, 192, 1, 1), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(192, 32, 1, 1), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192, 1, 3, 3), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(32, 192, 1, 1), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(32), float32], Tensor[(192, 32, 1, 1), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192, 1, 3, 3), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(64, 192, 1, 1), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(384, 64, 1, 1), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384, 1, 3, 3), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(64, 384, 1, 1), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(384, 64, 1, 1), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384, 1, 3, 3), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(64, 384, 1, 1), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(384, 64, 1, 1), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384, 1, 3, 3), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(64, 384, 1, 1), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(64), float32], Tensor[(384, 64, 1, 1), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384, 1, 3, 3), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(384), float32], Tensor[(96, 384, 1, 1), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(576, 96, 1, 1), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576, 1, 3, 3), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(96, 576, 1, 1), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(576, 96, 1, 1), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576, 1, 3, 3), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(96, 576, 1, 1), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(96), float32], Tensor[(576, 96, 1, 1), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576, 1, 3, 3), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(576), float32], Tensor[(160, 576, 1, 1), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(960, 160, 1, 1), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960, 1, 3, 3), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(160, 960, 1, 1), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(960, 160, 1, 1), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960, 1, 3, 3), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(160, 960, 1, 1), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(160), float32], Tensor[(960, 160, 1, 1), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960, 1, 3, 3), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(960), float32], Tensor[(320, 960, 1, 1), float32], Tensor[(320), float32], Tensor[(320), float32], Tensor[(320), float32], Tensor[(320), float32], Tensor[(1280, 320, 1, 1), float32], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(1280), float32], Tensor[(1000, 1280), float32], Tensor[(1000), float32]) -> Tensor[(1, 1000), float32] */